@using PagedList

@model PagedList<mass_pnr_lookup.Models.Batch>

@PagedList.Mvc.HtmlHelper.PagedListPager(
    Html,
    Model,
    pageNum => Url.Action("List", new { pageNumber = pageNum }),
    PagedList.Mvc.PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
        new AjaxOptions()
        {
            UpdateTargetId = "fileList",
            InsertionMode = InsertionMode.Replace
        }))

<div class="container">
    <div class="row">
        <div class="col-md-2">
            User
        </div>
        <div class="col-md-1">
            Status
        </div>
        <div class="col-md-1">
            SubmittedTS
        </div>
        <div class="col-md-1">
            CompletedTS
        </div>
        <div class="col-md-2">
            FileName
        </div>
        <div class="col-md-1">
            Bytes
        </div>
        <div class="col-md-1">
            Succeeded
        </div>
        <div class="col-md-1">
            Failed
        </div>
        <div class="col-md-2">
            Result
        </div>
    </div>

    @foreach (var item in Model)
    {
        <div class="row">
            <div class="col-md-2">
                @Html.DisplayFor(modelItem => item.User.Name)
            </div>
            <div class="col-md-1">
                @Html.DisplayFor(modelItem => item.Status)
            </div>
            <div class="col-md-1">
                @Html.DisplayFor(modelItem => item.SubmittedTS)
            </div>
            <div class="col-md-1">
                @Html.DisplayFor(modelItem => item.CompletedTS)
            </div>
            <div class="col-md-2">
                @Html.DisplayFor(modelItem => item.FileName)
            </div>
            <div class="col-md-1">
                @Html.DisplayFor(modelItem => item.Size)
            </div>
            <div class="col-md-1">
                @Html.DisplayFor(modelItem => item.SucceededLines)/@Html.DisplayFor(modelItem => item.NumLines)
            </div>
            <div class="col-md-1">
                @Html.DisplayFor(modelItem => item.FailedLines)/@Html.DisplayFor(modelItem => item.NumLines)
            </div>
            <div class="col-md-1">
                @if (item.Status == mass_pnr_lookup.Models.BatchStatus.Completed || item.Status == mass_pnr_lookup.Models.BatchStatus.Notified)
                {
                    @Html.ActionLink("Download", "Result", new { id = item.BatchId })
                    <br />
                    <a href="#" name="retryBatchLink" href2="@Url.Action("Retry",new { id = item.BatchId })">(Retry)</a>
                }
            </div>
            <div class="col-md-1">
                <a href="#" name="linesLink" href2="@Url.Action("ListLines", new {id= item.BatchId })">Lines</a>
            </div>
        </div>
    }
</div>